//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: AquaNox (2001) package files - dat/pak/*.pak
//   Authors: Swyter
//   Version: 2022.06.25
//   Purpose: Opens and decodes the encrypted file list.
//  Category: Game
// File Mask: *.pak
//  ID Bytes: 4D 41 53 53 49 56 45 46 49 4C 45 00 03 00 00 00
//------------------------------------------------

/*
gog - dat\version\version_1_18_oem.txt - D7 A9 A0 65 DA CD DB 00
ste - dat\version\version_1_18_uk.txt  - DD AF 61 AB DE C9 00
                                         -6 -6 63
*/

                     // 64 61 74 5C 76 65 72 73 69 6F 6E 5C 76 65 72 73 69 6F 6E 5F 31 5F 31 38 5F 6F 65 6D 2E 74 78 74 /* "dat\version\version_1_18_oem.txt" in Aqua.exe */
                     // B3 D0 E6 D4 BE 98 BC 9E E1 4B 4D BD D8 B0 E0 9C D3 E2 DA CD 75 CE 7B 7C C5 D7 A9 A0 65 DA CD DB /* encrypted filename in aquanox6.pak */
                     //                                                                                  33 37 66 55 67 /* subtract the plaintext to the encrypted to get the key; "37fUg" which is suspiciously keyboard-mashing-looking */

                     // 4F 6F 72 78 48 33 4A 2B 78 DC DF 61 62 4B 6E 29 6A 73 6C 6E 44 6F 4A 44 66 68 44 33 37 66 55 67 /* "h<a7LlÄOorxH3J+xÜßabKn)jslnDoJDfhD37fUgOoÖxH3X2x5Aa5Q7n*öl+üoJ#@" as found in plain text in the .exe, right next to other .pak-related strings */
// 68 3C 61 37 4C 6C C4 4F 6F 72 78 48 33 4A 2B 78 DC DF 61 62 4B 6E 29 6A 73 6C 6E 44 6F 4A 44 66 68 44 33 37 66 55 67 4F 6F D6 78 48 33 58 32 78 35 41 61 35 51 37 6E 2A F6 6C 2B FC 6F 4A 23 40


// B2 32 FC 6F - cypher at 0xd7d8 in aquanox4.pak in GOG version
// 6C 2B FC 6F - keystream at offset 0x57
// -----------
// 46 07 00 00 - plaintext


local const char key[64] = {
    0x68, 0x3C, 0x61, 0x37, 0x4C, 0x6C, 0xC4, 0x4F, 0x6F, 0x72, 0x78, 0x48, 0x33, 0x4A, 0x2B, 0x78,
    0xDC, 0xDF, 0x61, 0x62, 0x4B, 0x6E, 0x29, 0x6A, 0x73, 0x6C, 0x6E, 0x44, 0x6F, 0x4A, 0x44, 0x66,
    0x68, 0x44, 0x33, 0x37, 0x66, 0x55, 0x67, 0x4F, 0x6F, 0xD6, 0x78, 0x48, 0x33, 0x58, 0x32, 0x78,
    0x35, 0x41, 0x61, 0x35, 0x51, 0x37, 0x6E, 0x2A, 0xF6, 0x6C, 0x2B, 0xFC, 0x6F, 0x4A, 0x23, 0x40 
};

local int global_key_idx = 0;
LittleEndian();

struct header
{
    char magic[12];
    uint version, file_count;
    char copyright[60];
} head <open=true>;

char fourcc[4];

local int j = 0;

local uint64 last_offset = sizeof(head) + 0x4 + (0x84 * head.file_count);

struct entry
{
    //uint size;
    unsigned char encrypted_filename[128];

          uint size_enc;
    local uint size_dec = 0;
    


    local char dec[128], keystream[128];
    local int i = 0; global_key_idx = j;

    for (i=0; i<sizeof(dec); i++, global_key_idx++)
    {
        if (encrypted_filename[i] == 0)
            break;

        global_key_idx = global_key_idx % sizeof(key);

        dec      [i] = encrypted_filename[i] - key[global_key_idx];
        keystream[i] =                         key[global_key_idx];
    }

    local uint key_as_little_endian_uint = ((uint) (key[(j + 3) % sizeof(key)] & 0xff) << (8 * 3)) |
                                           ((uint) (key[(j + 2) % sizeof(key)] & 0xff) << (8 * 2)) |
                                           ((uint) (key[(j + 1) % sizeof(key)] & 0xff) << (8 * 1)) |
                                           ((uint) (key[(j + 0) % sizeof(key)] & 0xff) << (8 * 0));

    size_dec = size_enc - key_as_little_endian_uint;

    Printf("%x %x %x", size_enc, key_as_little_endian_uint, size_dec);

    local uint64 save_cur = FTell();

    FSeek(last_offset);
    //byte contents[size_dec];
    FSeek(save_cur);


    local uint64 start_offset = last_offset;
    last_offset += size_dec;

    Printf("%5u - comp. start %#010x - size %#010x - %s\n", j, start_offset, size_dec, dec );

    j++;

} entr[head.file_count] <optimize=false, read=Str("[/] " + dec)>;


for (j=0; j<head.file_count; j++)
{
    struct { byte t[entr[j].size_dec]; } a;
};


/*
    0 - comp. start 0x0000057c - size 0x0004cacd - map\4h1\script\4h1.sco                     57Ch - 0x3c9cd
    1 - comp. start 0x0004d049 - size 0x00044132 - map\5h2\script\5h2.sco                   3CF49h - 0x44132
    2 - comp. start 0x0009117b - size 0x0007f4f5 - map\6h3\script\6h3.sco                   8107Bh -
    3 - comp. start 0x00110670 - size 0x000007c0 - dat\sty\mtake_5n4_e~.des
    4 - comp. start 0x00110e30 - size 0x00000319 - dat\menu\maplist~.des
    5 - comp. start 0x00111149 - size 0x000174b4 - dat\menu\performance~.des
    6 - comp. start 0x001285fd - size 0x0000210a - dat\menu\text~.des
    7 - comp. start 0x0012a707 - size 0x00000007 - dat\version\version_1_18_oem.txt
    8 - comp. start 0x0012a70e - size 0x0000064d - ini\control_menu.des                     11876h -     654h
    9 - comp. start 0x0012ad5b - size 0x000184c5 - gfx\font\font1.tga                       FAA5Bh -   183C5h


35 06 65 37
68 3C 61 37


>>> hex( 0x37650635 - 0x37613c68)
'0x3c9cd'


*/